////////////////////////////////////////////////////////////////////
// TYPOGRAPHY
////////////////////////////////////////////////////////////////////

* {
    font-family: $font-family-body;
    // color: color(text);
}

body {
    font-size: p(15); // Set font size to 15px to match with design prototype
    line-height: p(26);
    color: #333;

    @include for-phone-only {}
    @include for-tablet-portrait {}
    @include for-tablet-landscape {}
    @include for-desktop {}
}


////////////////////////////////////////////////////////////////////
// LINK
*:focus {
    outline: none;
}

a {
    font-weight: $weight-semibold;
    color: color(primary);
    cursor: pointer;
}

////////////////////////////////////////////////////////////////////
// HEADERS
// <h1>Header</h1><h3 secondary>Subheader</h3>
h1 { 
    font-size: $h1-fontsize; 
    margin-top: ($h1-fontsize / 2); 
    // line-height: p(32);
    &[secondary] {
        font-size: $h1-fontsize * 0.5; 
        margin-top: 0;
        line-height: $h1-fontsize * 0.5; 
    }
}
h2 { 
    font-size: $h2-fontsize; 
    margin-top: ($h2-fontsize / 2); 
    // line-height: p(32);
    &[secondary] {
        font-size: $h2-fontsize * 0.5; 
        margin-top: 0;
        line-height: $h2-fontsize * 0.5; 
    }
}
h3 { 
    font-size: $h3-fontsize;
    margin-top: ($h3-fontsize);
    // line-height: p(32);
    &[secondary] {
        font-size: $h3-fontsize * 0.5; 
        margin-top: 0;
        line-height: $h3-fontsize * 0.5; 
    }
}
h4 { 
    font-size: $h4-fontsize; 
    margin-top: ($h4-fontsize); 
    // line-height: p(32);
    &[secondary] {
        font-size: $h4-fontsize * 0.5; 
        margin-top: 0;
        line-height: $h4-fontsize * 0.5; 
    }
}
h5 { 
    font-size: $h5-fontsize; 
    margin-top: ($h5-fontsize); 
    // line-height: p(32);
    &[secondary] {
        font-size: $h5-fontsize * 0.5; 
        margin-top: 0;
        line-height: $h5-fontsize * 0.5; 
    }
}
h6 { 
    font-size: $h6-fontsize; 
    margin-top: ($h6-fontsize); 
    // line-height: p(32);
    &[secondary] {
        font-size: $h6-fontsize * 0.5; 
        margin-top: 0;
        line-height: $h6-fontsize * 0.5; 
    }
}

    @include for-phone-only {
        // set h2 to 30px for mobile as in prototype artist inbox page
        // will keep update others heading as I found pages and their match
        h2 {
            font-size: p(30);
        }
        // set h4 to 25px for mobile as in prototype help-main, typography stats pages 
        h4 {
            font-size: p(25);
        }
    }


h1, h2, h3, h4, h5, h6 {
    font-family: $font-family-header;
    line-height: p(32);
    margin-bottom: p(35);
    font-weight: normal;
    word-wrap: break-word;
    &:not(.is-link) {
        color: $color-db;
    }
    
    small {
        font-family: $font-family-header-secondary;
        margin-left: 1em;
        font-size: 60%;
        letter-spacing: -1px;
        text-transform: none;
        font-family: $font-family-sans-serif;
        font-style: normal;
        font-weight: bolder;
        opacity: 0.7;
    }

    &[secondary] {
        color: gray;
        font-family: $font-family-header-secondary;
        small {
            font-family: $font-family-header;
            font-size: 80%;
            text-transform: none;
            font-style: normal;
        }
    }

    & + h1[secondary],
    & + h2[secondary],
    & + h3[secondary],
    & + h4[secondary],
    & + h5[secondary],
    & + h6[secondary] {
        margin-top: -3rem;
    }
}

hr { 
    border-color: #d9d9d9;
    border-top: 0px;
}

h3 {
    color: $color-placeholder;
}

h3.styled {
    color: $color-db;
    font-size: $h1-fontsize;
    margin-top: ($h1-fontsize);
}

.modal {

    h4, h5 {
        margin: 2.5rem 0 1.25rem 0;
        padding-bottom: 0.3125rem;
        border-bottom: $border-width solid #999;
    }

    .modal-title {
        font-size: $h1-fontsize;
        font-family: $font-family-header;
        line-height: p(32);
        margin-bottom: p(35);
        font-weight: normal;
        color: $color-db;
        word-wrap: break-word;
        padding-bottom: 1rem;
        border-bottom: $border-width solid $border-color;
    }

    &.is-small {
        .modal-title {
            font-size: $h4-fontsize;
            // padding-bottom: p(6);
        }
    }

}


.has-border {
    padding-bottom: 1rem;
    margin-bottom: 1rem;
    border-bottom: $border-width solid $border-color;
}

.has-link {
    position: relative;
    padding-right: 5rem;
    a {
        font-size: p(13);
        position: absolute;
        right: 0;
        top: 0;
    }   
}

h4 {
    &.has-border {
        padding-bottom: 6px;
    }
}


// text-darkblack
.text-db { color: $color-db }
// text-fullblack
.text-fb { color: #000; }
.text-red { color: #f00; }
.text-fade { color: $color-fade; }

.fs-n { font-style: $fs-n; }
.fw-n { font-weight: $weight-normal; }
.fw-m,
.fw-500 { font-weight: $weight-semibold; }

.text-xl {
    font-size: p(45);
    line-height: p(16);
}
.text-s {
    font-size: p(13);
    line-height: p(21);
}

.modal-event-trigger {
    font-size: p(13);
    line-height: p(16);
}

////////////////////////////////////////////////////////////////////
// ui.arttap.com dev site stylings
// Elements with `documentation` get special styling to distinguish
// from the proper UI/UX of ArtTap. These might be out of date.
@keyframes blinker {
    from {
        opacity: 1;
    }

    to {
        opacity: 0.2;
    }
}
[discussion] {
    color: #ff0000 !important;
    opacity: 1;
    // transition: opacity 0.5s linear;
    animation: blinker 3s linear infinite;

}
[documentation] {
    color: #2196F3 !important;
    &[padded] {
        padding: 1rem;
        margin: 1rem;
    }
    &[bordered] {
        border: 1px dotted #2196F3 !important;
    }
    &.fa-check-square-o {
        // font-family: $font-family-sans-serif;
    }
}
hr[documentation] {
    // https://codepen.io/ibrahimjabbari/pen/ozinB
    height: 30px; 
    border-style: solid; 
    border-color: #2196F3;
    border-width: 1px 0 0 0; 
    border-radius: 20px; 
    &:before { 
        display: block; 
        content: ""; 
        height: 30px; 
        margin-top: -31px; 
        border-style: solid; 
        border-color: #2196F3; 
        border-width: 0 0 1px 0; 
        border-radius: 20px; 
    }
}

// Reset List Style
.list-unstyled {
    padding: 0;
    margin: 0;
    list-style: none;
}


.at-dots {
    padding: 0px;
    list-style: none;
    li {
        padding-left: 1.6rem;
        position: relative;
        &:before {
            content: "";
            display: inline-block;
            width: 3px;
            height: 3px;
            border-radius: 50%;
            position: absolute;
            top: 12px;
            left: 3px;
            background-color: color(black);
        }
    }
}

// single line separator
.sep {
    height: 1px;
    background-color: $border-color;
    margin: 2rem 0;
    &.m10 {
        margin: p(10) 0;
    }
    &.nospace {
        margin: 0;
    }
    &.small {
        margin: 1rem 0;
    }
    &.small2 {
        margin: 1.5rem 0;
    }
    &.medium {
        margin: 3rem 0;
    }
    &.large {
        margin: 4rem 0;
    }
}


// single line separator with overlay text
.sep-text {
    position: relative;
    border-bottom: $border-width solid $border-color;
    margin: p(20) 0;

    span {
        color: color(gray);
        position: absolute;
        background: white;
        padding: 0 p(15);
        top: p(-13);
        left: 50%;
        transform: translateX(-50%);
    }
}


// attach work icon border circle
.at-attach-work {
    border: 1px solid $color-db;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    border-radius: 50%;
    width: 46px;
    height: 46px;
    // margin-right: 15px;
    // margin-bottom: 20px;
}


// icon color circle
.color-ball {
    padding-left: p(18);
    height: p(8);
    i {
        border-radius: 50%;
        width: 18px;
        height: 18px;
        left: 0px;
        top: 5px;
        position: absolute;
    }

    @each $name, $pair in $colors {
        $tag: $name;
        $val: nth($pair, 1);
        &.#{$tag} {
            background-color: $val !important;
        }
    }
}


// Overflow
.overflow-400 {
    overflow-y: scroll;
    max-height: 400px;
    overflow-x: hidden;
}
