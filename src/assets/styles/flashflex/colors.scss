////////////////////////////////////////////////////////////////////
// COLORS
// Walter started cleaning up color settings 20171013.
// See the names of colors in the $color map below.
// 
// SCSS loops are used to generate the *-light and *-dark versions
// of every color, as well as the classes:
// 	.COLORNAME { background-color: COLOR; color: COLOR-INVERSE-FOR-CONTRAST; }
// 	.COLORNAME-TEXT { color: COLOR; }
// 	
// Colors are "translated" for Bulma components in 'bulma-0.5.3/color-translate.scss'
////////////////////////////////////////////////////////////////////

// Colormap function
// .class { color: color(greentree); }
@function color($key) {
	@if map-has-key($colors, $key) {
		@return nth(map-get($colors, $key), 1);
	}

	@warn "Unknown `#{$key}` in $colors.";
	@return null;
}
@function color-inverse($key) {
	@if map-has-key($colors, $key) {
		@return nth(map-get($colors, $key), 2);
	}

	@warn "Unknown `#{$key}` in $colors.";
	@return null;
}


// ArtTap palette
$color-white:      #ffffff;
$color-gray:       #8B8B8B;
$color-black:      #141414;;
$color-green:      #BCCE38;
$color-greentree:  #34863D;
$color-bluesea:    #408C98;
$color-bluesky:    #A0D5E5;
$color-blueroyal:  #425CAB;
$color-purple:     #6C449E;
$color-magenta:    #A22173;
$color-red:        #D92F1D;
$color-orange:     #F9922C;
$color-yellow:     #FCEA44;
$color-eggshell:   #FAEFCF;
$color-brown:      #7C4D38;

// UI colors
$color-primary:    #E09D00 !default;
$color-secondary:  $color-black;
$color-text:       transparentize($color-black, 0.87);
$color-link:       $color-primary;

// Shades
// $color-primary-dark: darken($color-primary, 3%) !default;
// $color-primary-light: lighten($color-primary, 3%) !default;
// $color-secondary-dark: darken($color-secondary, 3%) !default;
// $color-secondary-light: lighten($color-secondary, 3%) !default;

// Build the color map
@function contrastColor($n) {
    $color-brightness: round((red($n) * 299) + (green($n) * 587) + (blue($n) * 114) / 1000);
    $light-color: round((red(#ffffff) * 299) + (green(#ffffff) * 587) + (blue(#ffffff) * 114) / 1000);
    @if abs($color-brightness) < ($light-color/2){
        @return $color-white;
    }
    @else {
        @return $color-black;
    }
}

$colors: (
	primary    : ($color-primary, contrastColor($color-primary)),
	secondary  : ($color-secondary, contrastColor($color-secondary)),
	text       : ($color-text, contrastColor($color-text)),
	link       : ($color-link, contrastColor($color-link)),
	white      : ($color-white, contrastColor($color-white)),
	gray       : ($color-gray, contrastColor($color-gray)),
	black      : ($color-black, contrastColor($color-black)),
	green      : ($color-green, contrastColor($color-green)),
	greentree  : ($color-greentree, contrastColor($color-greentree)),
	bluesea    : ($color-bluesea, contrastColor($color-bluesea)),
	bluesky    : ($color-bluesky, contrastColor($color-bluesky)),
	blueroyal  : ($color-blueroyal, contrastColor($color-blueroyal)),
	purple     : ($color-purple, contrastColor($color-purple)),
	magenta    : ($color-magenta, contrastColor($color-magenta)),
	red        : ($color-red, contrastColor($color-red)),
	orange     : ($color-orange, contrastColor($color-orange)),
	yellow     : ($color-yellow, contrastColor($color-yellow)),
	eggshell   : ($color-eggshell, contrastColor($color-eggshell)),
	brown      : ($color-brown, contrastColor($color-brown))
);

@each $name, $pair in $colors {
	$this-color: nth($pair, 1);
	$this-color-invert: nth($pair, 2);

	$colors: map-merge($colors, (
		$name#{-light}: (
			lighten($this-color, 10%),
			contrastColor(lighten($this-color, 10%))
		)
	));
	$colors: map-merge($colors, (
		$name#{-dark}: (
			darken($this-color, 10%),
			contrastColor(darken($this-color, 10%))
		)
	));
}
// @debug $colors;
// @debug "primary color: " color(primary);
// @debug "primary color (darker): " color(primary-dark);
// @debug "primary color (inverse): " color-inverse(primary);



// Color classes
@each $name, $pair in $colors {
	$this-color: nth($pair, 1);
	$this-color-invert: nth($pair, 2);

	*.#{$name} {
		color: $this-color-invert;
		background-color: $this-color;
	}
	*.#{$name}-text {
		color: $this-color-invert;
	}
}

