// 20171004 used this for form > radio/checkbox 
// Will use this again when coming back for search form setup


// STANDARD/INHERITED COLOR AND SIZE SETTINGS FOR THESE STYLES
$transition-duration: .4s;
$checkbox-offset: -15px;
$checkbox-width: 15px;
$checkbox-height: 15px;
$checkbox-border: 1px;
$checkbox-inner-padding: 2px;
$is-large-multiplier: 1.5;

// TODO: Official color list
$color-list: 
	(red $red)
	(orange $orange)
	(yellow $yellow)
	(green $green)
	(turquoise $turquoise)
	(blue $blue)
	(purple $purple);
$shadow-offset-x: 4px;
$shadow-offset-y: 4px;
$shadow-spread: 10px;
$shadow-color: $grey-light;
$primary-box-shadow: $shadow-offset-x $shadow-offset-y $shadow-spread $shadow-color;

/**
 * TOC: Search form markup
 * 1. Styling for non-search form but fancy inputs
 * 2. Styling for dollar input
 * 2. Styling for color checkbox with right-side label
 * 3. Styling within dropdown menus
 * 		3.1 Special styling for "color" dropdown
 * 4. Slider for sizes
 * 5. Alternative UI/UX for color / checkboxes (Deprecated 20170523)
 */

form.is-search-form {
	// TODO: Text and element sizing within dropdown

	/**
	 * Basic positioning and definitions
	 */
	// BASIC FANCY FORM DEF BASIC FANCY FORM DEF BASIC FANCY FORM DEF BASIC FANCY FORM DEF 
	// BASIC FANCY FORM DEF BASIC FANCY FORM DEF BASIC FANCY FORM DEF BASIC FANCY FORM DEF 
	// Generally for these fancy inputs:
	input {
		display: none;
	}

	// Set positioning for labels and checkbox/radio elements
	// * except `is-colorball-checkbox` which is special (defined later)
	label, .checkbox, .radio, .radio + .radio {
		&:not(.is-colorball-checkbox) {
			position: relative;
			margin-left: ($checkbox-offset * -1) * 1.25;
			padding-left: ($checkbox-offset * -1) * .25;

			&.is-large {
				margin-left: ($checkbox-offset * -1) * 1.25 * $is-large-multiplier;
				padding-left: ($checkbox-offset * -1) * .25 * $is-large-multiplier;
			}
		}
	}

	// Styling for all checkbox labels: set the basic colors
	label {
		span::before {
			background-color: $white;
			border: $checkbox-border solid $grey-darker;
		}
		span::after {
			background-color: $white;
			transition: background-color $transition-duration;
		}
		&.is-large {
			span::before {
				background-color: $white;
				border: ($checkbox-border * $is-large-multiplier) solid $grey-darker;
			}
			span::after {
				background-color: $white;
			}
		} 
	}
	// Styling for all checkbox labels*: set positioning
	// * except `is-colorball-checkbox` which is special (defined later)
	label:not(.is-colorball-checkbox) {
		span::before, span::after {
			content: '';
			position: absolute;
			top: 0;
			bottom: 0;
			padding: 0;
			margin: auto;
		}
		span::before {
			left: $checkbox-offset;
			width: $checkbox-width;
			height: $checkbox-height;
			// background-color: $white;
			// border: $checkbox-border solid $grey-darker;
		}
		span::after {
			left: $checkbox-offset + $checkbox-border  + ($checkbox-inner-padding * 1);
			width: $checkbox-width - ($checkbox-border * 2) - ($checkbox-inner-padding * 2);
			height: $checkbox-height - ($checkbox-border * 2) - ($checkbox-inner-padding * 2);
			// background-color: $white;
			// transition: background-color $transition-duration;
		}

		// Larger checkboxes / radios
		&.is-large {
			span::before {
				left: ($checkbox-offset) * $is-large-multiplier;
				width: ($checkbox-width) * $is-large-multiplier;
				height: ($checkbox-height) * $is-large-multiplier;
				// background-color: $white;
				// border: ($checkbox-border * $is-large-multiplier) solid $grey-darker;
			}
			span::after {
				left: ($checkbox-offset + $checkbox-border  + ($checkbox-inner-padding * 1)) * $is-large-multiplier;
				width: ($checkbox-width - ($checkbox-border * 2) - ($checkbox-inner-padding * 2)) * $is-large-multiplier;
				height: ($checkbox-height - ($checkbox-border * 2) - ($checkbox-inner-padding * 2)) * $is-large-multiplier;
				// background-color: $white;
				// transition: background-color $transition-duration;
			}
		} 
	}

	// Fill the span::after when checkbox has been checked
	input:checked + span:after {
		background-color: $grey-darker;
	}

	/**
	 * Text sizing inside dropdowns
	 */
	 .menu {
	 	font-size: 0.8rem;
	 }

	/**
	 * Positioning for DOLLAR input
	 */
	// DOLLAR INPUT DOLLAR INPUT DOLLAR INPUT DOLLAR INPUT DOLLAR INPUT DOLLAR INPUT 
	// DOLLAR INPUT DOLLAR INPUT DOLLAR INPUT DOLLAR INPUT DOLLAR INPUT DOLLAR INPUT 
	input[type=text] {
		display: inherit;

		&.is-dollar-input {
			width: 40%;
			height: 1rem;
			display: inline-block;
		}
	}

	/**
	 * Basic color-checkbox, with right-side label and pulled-left color ball
	 */
	// BASIC COLOR CHECKBOXES COLOR CHECKBOXES COLOR CHECKBOXES COLOR CHECKBOXES 
	// BASIC COLOR CHECKBOXES COLOR CHECKBOXES COLOR CHECKBOXES COLOR CHECKBOXES 
	// Color checkboxes (ball in center, then a border when selected)
	// 	- Defines roundness, transition speeds, border thicknesses
	// 	- Assigns actual colors from list via a loop
	// 	- Allows `.is-large` for larger scaling
	label.is-color-checkbox,
	label.is-colorball-checkbox {
		span::before {
			border-radius: $checkbox-width;
			border: $checkbox-border solid transparent;
			transition: border-color $transition-duration;
		}
		span::after {
			border-radius: $checkbox-width;
		}

		&.is-large {
			span::before {
				border-radius: $checkbox-width * $is-large-multiplier;
			}
			span::after {
				border-radius: $checkbox-width * $is-large-multiplier;
			}
		}

		@each $combo in $color-list {
			$tag: nth($combo, 1);
			$val: nth($combo, 2);

			&.is-color-#{$tag} {
				span::after {
					background-color: $val;
				}
				input:checked + span:before {
					border-color: $val;
				}
			}
		}
	}

	/**
	 * Positioning for searchbar/navigation dropdown
	 * And inside that, the colorball dropdown
	 */
	// MENU DROPDOWN for searchbar / navigation MENU DROPDOWN for searchbar / navigation 
	// MENU DROPDOWN for searchbar / navigation MENU DROPDOWN for searchbar / navigation 
	.nav-item.dropdown {
		padding-left: 0.5rem;
		padding-right: 0.5rem;

		>.button.dropdown-toggle {
			margin-bottom: 0px;
			padding-bottom: 0px;
		}

		aside.menu {
			padding: 0.25rem;
			margin-top: none;
			white-space: nowrap;

			ul.menu-list {
				list-style: none;
				margin: 0px;
				
				li {
					align-items: left;
					display: flex;
					padding: 0.2rem;
				}
			}
		}
	}

	/**
	 * Special handling for color dropdown menu (breakout)
	 */
	// IS-COLOR-MENU IS-COLOR-MENU IS-COLOR-MENU IS-COLOR-MENU IS-COLOR-MENU 
	// IS-COLOR-MENU IS-COLOR-MENU IS-COLOR-MENU IS-COLOR-MENU IS-COLOR-MENU 
	&.active .menu.is-color-menu,
	.dropdown-toggle:focus + .menu.is-color-menu,
	.menu.is-color-menu:hover {
		display: flex;
	}
	aside.menu.is-color-menu {
		// http://the-echoplex.net/flexyboxes/?fixed-height=on&display=flex&flex-direction=row&flex-wrap=wrap&justify-content=flex-start&align-items=flex-start&align-content=center&order%5B%5D=0&flex-grow%5B%5D=0&flex-shrink%5B%5D=1&flex-basis%5B%5D=auto&align-self%5B%5D=auto&order%5B%5D=0&flex-grow%5B%5D=0&flex-shrink%5B%5D=1&flex-basis%5B%5D=auto&align-self%5B%5D=auto&order%5B%5D=0&flex-grow%5B%5D=0&flex-shrink%5B%5D=1&flex-basis%5B%5D=auto&align-self%5B%5D=auto&order%5B%5D=0&flex-grow%5B%5D=0&flex-shrink%5B%5D=1&flex-basis%5B%5D=auto&align-self%5B%5D=auto&order%5B%5D=0&flex-grow%5B%5D=0&flex-shrink%5B%5D=1&flex-basis%5B%5D=auto&align-self%5B%5D=auto&order%5B%5D=0&flex-grow%5B%5D=0&flex-shrink%5B%5D=1&flex-basis%5B%5D=auto&align-self%5B%5D=auto&order%5B%5D=0&flex-grow%5B%5D=0&flex-shrink%5B%5D=1&flex-basis%5B%5D=auto&align-self%5B%5D=auto&order%5B%5D=0&flex-grow%5B%5D=0&flex-shrink%5B%5D=1&flex-basis%5B%5D=auto&align-self%5B%5D=auto&order%5B%5D=0&flex-grow%5B%5D=0&flex-shrink%5B%5D=1&flex-basis%5B%5D=auto&align-self%5B%5D=auto&order%5B%5D=0&flex-grow%5B%5D=0&flex-shrink%5B%5D=1&flex-basis%5B%5D=auto&align-self%5B%5D=auto&order%5B%5D=0&flex-grow%5B%5D=0&flex-shrink%5B%5D=1&flex-basis%5B%5D=auto&align-self%5B%5D=auto
		display: none;
		flex-direction: row;
		flex-wrap: wrap;
		justify-content: center;
		align-content: center;
		align-items: center;

		padding: 0px;
		margin: 0px;

		label.is-colorball-checkbox {
			flex: 0 0 auto;
			align-self: center;

			width: $checkbox-width * 1.5;
			height: $checkbox-height * 1.5;

			// TRY 2 as flex centered
			display: flex;
			flex-direction: row;
			flex-wrap: nowrap;
			align-items: center;
			align-content: center;
			justify-content: center;

			// Special span definition where things are flex-centered
			// and not precisely positioned
			span {
				// border: 1px dashed pink;
				// width: 100%;
				// height: 100%;
				// padding: 0px;
				// margin: 0px;

				// display: flex;
				// flex-direction: row;
				// flex-wrap: nowrap;
				// align-items: center;
				// align-content: center;
				// justify-content: center;

				// http://the-echoplex.net/flexyboxes/?fixed-height=on&display=flex&flex-direction=row&flex-wrap=wrap&justify-content=center&align-items=center&align-content=center&order%5B%5D=1&flex-grow%5B%5D=1&flex-shrink%5B%5D=1&flex-basis%5B%5D=auto&align-self%5B%5D=center&order%5B%5D=2&flex-grow%5B%5D=1&flex-shrink%5B%5D=1&flex-basis%5B%5D=auto&align-self%5B%5D=center
				&::before, &::after {
					content: '';
				}
				&::before {
					// Has the border
					content: '';
					position: absolute;
					// border: 1px dotted blue;
					left: 50%;                        /* center horizontally */
					top: 50%;                         /* center vertically */
					transform: translate(-50%,-50%);

					width: $checkbox-width;
					height: $checkbox-height;
				}
				&::after {
					// Has the ball
					content: '';
					// display: flex;
					// flex: 0 0 auto;
					// align-self: auto;

					position: absolute;
					// border: 1px dotted blue;
					left: 50%;                        /* center horizontally */
					top: 50%;                         /* center vertically */
					transform: translate(-50%,-50%);

					width: $checkbox-width - ($checkbox-border * 2) - ($checkbox-inner-padding * 2);
					height: $checkbox-height - ($checkbox-border * 2) - ($checkbox-inner-padding * 2);
				}


			}

			&.is-large {
				// width:  $checkbox-width * (1.5 * $is-large-multiplier);
				// height: $checkbox-height * (1.5 * $is-large-multiplier);
				width:  $checkbox-width * (1.6);
				height: $checkbox-height * (1.6);

				span::before {
					width: $checkbox-width * $is-large-multiplier;
					height: $checkbox-height * $is-large-multiplier;
				}
				span::after {
					width: ($checkbox-width - ($checkbox-border * 2) - ($checkbox-inner-padding * 2)) * $is-large-multiplier;
					height: ($checkbox-height - ($checkbox-border * 2) - ($checkbox-inner-padding * 2)) * $is-large-multiplier;
				}
			}
		}
	}
	// END IS-COLOR-MENU END IS-COLOR-MENU END IS-COLOR-MENU 
	// END IS-COLOR-MENU END IS-COLOR-MENU END IS-COLOR-MENU 


	/**
	 * NoUISlider styling for sizes
	 */
	// NoUISlider -- change styling
	// UI SLIDER FOR SIZES UI SLIDER FOR SIZES UI SLIDER FOR SIZES UI SLIDER FOR SIZES 
	// UI SLIDER FOR SIZES UI SLIDER FOR SIZES UI SLIDER FOR SIZES UI SLIDER FOR SIZES 
	aside.menu.is-size-menu {
		width: 20rem;
	}
	.noUi-container {
		padding: 0px 0.5rem;
	}

	.noUi-horizontal {
		height: 2px;
		margin: 3px 0 3px 0;
	}
	.noUi-target {
		background: $grey-light;
		border-radius: 4px;
		// border: 1px solid #D3D3D3;
		// box-shadow: inset 0 1px 1px #F0F0F0, 0 3px 6px -5px #BBB;
		box-shadow: none;
		border: none;
	}
	.noUi-connect {
		background: $grey-dark;
		box-shadow: none;
		// box-shadow: inset 0 0 3px rgba(51, 51, 51, 0.45);
		-webkit-transition: background 450ms;
		transition: background 450ms;
	}
	.noUi-base {
		width: 100%;
		height: 100%;
		position: relative;
		z-index: 1;
		/* Fix 401 */
	}
	.noUi-handle {
		border: 1px solid $grey-dark;
		border-radius: 100%;
		background: $grey-dark;
		cursor: default;
		box-shadow: none;
		// box-shadow: inset 0 0 1px #FFF, inset 0 1px 7px #EBEBEB, 0 3px 6px -3px #BBB;
	}
	.noUi-horizontal .noUi-handle {
		width: 15px;
		height: 15px;
		left: -14px;
		top: -6px;
		&.noUi-handle-lower {
			// So going to "0" on left doesn't mean ball goes off the line
			left: -1px;
		}
	}
	.noUi-handle:before,
	.noUi-handle:after {
		display: none;
		// content: "";
		// display: block;
		// position: absolute;
		// height: 14px;
		// width: 1px;
		// background: #E8E7E6;
		// left: 14px;
		// top: 6px;
	}
}
