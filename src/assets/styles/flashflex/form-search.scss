////////////////////////////////////////////////////////////////////
// SEARCH FORM
// 
// Do not use.
// WF will work this again when re-integrating search form.
////////////////////////////////////////////////////////////////////


// STANDARD/INHERITED COLOR AND SIZE SETTINGS FOR THESE STYLES
$transition-duration: .4s;
$checkbox-offset: -15px;
$checkbox-width: 15px;
$checkbox-height: 15px;
$checkbox-border: 1px;
$checkbox-inner-padding: 2px;
$is-large-multiplier: 1.5;

// TODO: Official color list
$color-list: 
    (white color(white))
    (gray color(gray))
    (black color(black))
    (green color(green))
    (greentree color(greentree))
    (bluesea color(bluesea))
    (bluesky color(bluesky))
    (blueroyal color(blueroyal))
    (purple color(purple))
    (magenta color(magenta))
    (red color(red))
    (orange color(orange))
    (yellow color(yellow))
    (eggshell color(eggshell))
    (brown color(brown));
$shadow-offset-x: 4px;
$shadow-offset-y: 4px;
$shadow-spread: 10px;
$shadow-color: color(gray-light);
$primary-box-shadow: $shadow-offset-x $shadow-offset-y $shadow-spread $shadow-color;

/**
 * TOC: Search form markup
 * 1. Styling for non-search form but fancy inputs
 * 2. Styling for dollar input
 * 2. Styling for color checkbox with right-side label
 * 3. Styling within dropdown menus
 *      3.1 Special styling for "color" dropdown
 * 4. Slider for sizes
 * 5. Alternative UI/UX for color / checkboxes (Deprecated 20170523)
 */

form.is-search-form {
    border: 1px dotted color(gray);

    .row {
        justify-content: space-between;
    }

    // @import "tmp.scss";
    // @import "tmp2.scss";
    @import "bulma-dropdown-menu.scss";



    // Basic positioning and definitions
    // BASIC FANCY FORM DEF BASIC FANCY FORM DEF BASIC FANCY FORM DEF BASIC FANCY FORM DEF 
    input {
        display: none;
    }

    // Set positioning for labels and checkbox/radio elements
    // * except `is-colorball-checkbox` which is special (defined later)
    label, .checkbox, .radio, .radio + .radio {
        &:not(.is-colorball-checkbox) {
            position: relative;
            margin-left: ($checkbox-offset * -1) * 1.25;
            padding-left: ($checkbox-offset * -1) * .25;

            &.is-large {
                margin-left: ($checkbox-offset * -1) * 1.25 * $is-large-multiplier;
                padding-left: ($checkbox-offset * -1) * .25 * $is-large-multiplier;
            }
        }
    }

    // Styling for all checkbox labels: set the basic colors
    label {
        span::before {
            background-color: color(white);
            border: $checkbox-border solid color(gray-dark);
        }
        span::after {
            background-color: color(white);
            transition: background-color $transition-duration;
        }
        &.is-large {
            span::before {
                background-color: color(white);
                border: ($checkbox-border * $is-large-multiplier) solid color(gray-dark);
            }
            span::after {
                background-color: color(white);
            }
        } 
    }
    // Styling for all checkbox labels*: set positioning
    // * except `is-colorball-checkbox` which is special (defined later)
    // 20171024 165950 defined elsewhere in forms
    // label:not(.is-colorball-checkbox) {
    //  span::before, span::after {
    //      content: '';
    //      position: absolute;
    //      top: 0;
    //      bottom: 0;
    //      padding: 0;
    //      margin: auto;
    //  }
    //  span::before {
    //      left: $checkbox-offset;
    //      width: $checkbox-width;
    //      height: $checkbox-height;
    //  }
    //  span::after {
    //      left: $checkbox-offset + $checkbox-border  + ($checkbox-inner-padding * 1);
    //      width: $checkbox-width - ($checkbox-border * 2) - ($checkbox-inner-padding * 2);
    //      height: $checkbox-height - ($checkbox-border * 2) - ($checkbox-inner-padding * 2);
    //  }

    //  // Larger checkboxes / radios
    //  &.is-large {
    //      span::before {
    //          left: ($checkbox-offset) * $is-large-multiplier;
    //          width: ($checkbox-width) * $is-large-multiplier;
    //          height: ($checkbox-height) * $is-large-multiplier;
    //      }
    //      span::after {
    //          left: ($checkbox-offset + $checkbox-border  + ($checkbox-inner-padding * 1)) * $is-large-multiplier;
    //          width: ($checkbox-width - ($checkbox-border * 2) - ($checkbox-inner-padding * 2)) * $is-large-multiplier;
    //          height: ($checkbox-height - ($checkbox-border * 2) - ($checkbox-inner-padding * 2)) * $is-large-multiplier;
    //      }
    //  } 
    // }

    // Fill the span::after when checkbox has been checked
    input:checked + span:after {
        background-color: color(gray-dark);
    }

    // Text sizing inside dropdowns
     .menu {
        font-size: 0.8rem;
     }

    // Positioning for DOLLAR input
    // DOLLAR INPUT DOLLAR INPUT DOLLAR INPUT DOLLAR INPUT DOLLAR INPUT DOLLAR INPUT 
    // DOLLAR INPUT DOLLAR INPUT DOLLAR INPUT DOLLAR INPUT DOLLAR INPUT DOLLAR INPUT 
    input[type=text] {
        display: inherit;
        &.is-dollar-input {
            width: 40%;
            height: 1rem;
            display: inline-block;
        }
    }

    // BASIC COLOR CHECKBOXES COLOR CHECKBOXES COLOR CHECKBOXES COLOR CHECKBOXES 
    // BASIC COLOR CHECKBOXES COLOR CHECKBOXES COLOR CHECKBOXES COLOR CHECKBOXES 
    // Color checkboxes (ball in center, then a border when selected)
    //  - Defines roundness, transition speeds, border thicknesses
    //  - Assigns actual colors from list via a loop
    //  - Allows `.is-large` for larger scaling
    label.is-colorball-checkbox {
        span::before {
            border-radius: $checkbox-width;
            border: $checkbox-border solid transparent;
            transition: border-color $transition-duration;
        }
        span::after {
            border-radius: $checkbox-width;
        }

        &.is-large {
            span::before {
                border-radius: $checkbox-width * $is-large-multiplier;
            }
            span::after {
                border-radius: $checkbox-width * $is-large-multiplier;
            }
        }

        @each $name, $pair in $colors {
            $tag: $name;
            $val: nth($pair, 1);
            &.is-color-#{$tag} {
                span::after {
                    background-color: $val;
                }
                input:checked + span:before {
                    border-color: $val;
                }
            }
        }
    }


    // Positioning for searchbar/navigation dropdown
    // And inside that, the colorball dropdown
    // MENU DROPDOWN for searchbar / navigation MENU DROPDOWN for searchbar / navigation 
    // MENU DROPDOWN for searchbar / navigation MENU DROPDOWN for searchbar / navigation 
    .nav-item.column {
        &:not(:last-of-type) {
            margin-right: 0.5em;
        }
        // margin-left: 0.5rem;
        // margin-right: 0.5rem;

        display: flex;
        flex: 1 0 auto;

        >.button {
            &.dropdown-toggle {
                @extend .button;
                @extend .is-fullwidth;
                @extend .is-outlined;
                @extend .is-gray;


                justify-content: space-between;
                span {
                    flex: 1 0 auto;
                }
                span.icon {
                    flex: 0 0 auto;
                }
            }
            .button-search {
                @extend .is-fullwidth;
                display: flex;
                flex-direction: row;
                // color: color(white);
                // @extend .is-primary;

                .icon {
                    // display: inline-block;
                    // display: block;
                    .fa {
                        color: color(black);
                    }
                }
            }
        }

        aside.menu {
            padding: 0.25rem;
            margin-top: none;
            white-space: nowrap;

            ul.menu-list {
                -webkit-padding-start: 0; //wtf
                list-style: none;
                margin: 0px;
                
                li {
                    align-items: left;
                    display: flex;
                    padding: 0.2rem;
                }
            }
        }
    }

    // IS-SIZE-MENU IS-SIZE-MENU IS-SIZE-MENU IS-SIZE-MENU IS-SIZE-MENU 
    // IS-SIZE-MENU IS-SIZE-MENU IS-SIZE-MENU IS-SIZE-MENU IS-SIZE-MENU 
    // noUiSlider directives are in next scss file
    aside.menu.is-size-menu {
        width: 20rem;
    }


    // Special handling for color dropdown menu (breakout)
    // IS-COLOR-MENU IS-COLOR-MENU IS-COLOR-MENU IS-COLOR-MENU IS-COLOR-MENU 
    // IS-COLOR-MENU IS-COLOR-MENU IS-COLOR-MENU IS-COLOR-MENU IS-COLOR-MENU 
    &.active .menu.is-color-menu,
    .dropdown-toggle:focus + .menu.is-color-menu,
    .menu.is-color-menu:hover {
        display: flex;
    }
    aside.menu.is-color-menu {
        // http://the-echoplex.net/flexyboxes/?fixed-height=on&display=flex&flex-direction=row&flex-wrap=wrap&justify-content=flex-start&align-items=flex-start&align-content=center&order%5B%5D=0&flex-grow%5B%5D=0&flex-shrink%5B%5D=1&flex-basis%5B%5D=auto&align-self%5B%5D=auto&order%5B%5D=0&flex-grow%5B%5D=0&flex-shrink%5B%5D=1&flex-basis%5B%5D=auto&align-self%5B%5D=auto&order%5B%5D=0&flex-grow%5B%5D=0&flex-shrink%5B%5D=1&flex-basis%5B%5D=auto&align-self%5B%5D=auto&order%5B%5D=0&flex-grow%5B%5D=0&flex-shrink%5B%5D=1&flex-basis%5B%5D=auto&align-self%5B%5D=auto&order%5B%5D=0&flex-grow%5B%5D=0&flex-shrink%5B%5D=1&flex-basis%5B%5D=auto&align-self%5B%5D=auto&order%5B%5D=0&flex-grow%5B%5D=0&flex-shrink%5B%5D=1&flex-basis%5B%5D=auto&align-self%5B%5D=auto&order%5B%5D=0&flex-grow%5B%5D=0&flex-shrink%5B%5D=1&flex-basis%5B%5D=auto&align-self%5B%5D=auto&order%5B%5D=0&flex-grow%5B%5D=0&flex-shrink%5B%5D=1&flex-basis%5B%5D=auto&align-self%5B%5D=auto&order%5B%5D=0&flex-grow%5B%5D=0&flex-shrink%5B%5D=1&flex-basis%5B%5D=auto&align-self%5B%5D=auto&order%5B%5D=0&flex-grow%5B%5D=0&flex-shrink%5B%5D=1&flex-basis%5B%5D=auto&align-self%5B%5D=auto&order%5B%5D=0&flex-grow%5B%5D=0&flex-shrink%5B%5D=1&flex-basis%5B%5D=auto&align-self%5B%5D=auto
border: 1px solid red;

        // display: none;
        display: flex;
        flex-direction: row;
        flex-wrap: wrap;
        justify-content: center;
        align-content: center;
        align-items: center;

        padding: 0px;
        margin: 0px;

            span {
                // border: 1px dashed pink;
                // width: 100%;
                // height: 100%;
                // padding: 0px;
                // margin: 0px;

                // display: flex;
                // flex-direction: row;
                // flex-wrap: nowrap;
                // align-items: center;
                // align-content: center;
                // justify-content: center;

                // http://the-echoplex.net/flexyboxes/?fixed-height=on&display=flex&flex-direction=row&flex-wrap=wrap&justify-content=center&align-items=center&align-content=center&order%5B%5D=1&flex-grow%5B%5D=1&flex-shrink%5B%5D=1&flex-basis%5B%5D=auto&align-self%5B%5D=center&order%5B%5D=2&flex-grow%5B%5D=1&flex-shrink%5B%5D=1&flex-basis%5B%5D=auto&align-self%5B%5D=center
                &::before, &::after {
                    content: '';
                }
                &::before {
                    // Has the border
                    content: '';
                    position: absolute;
                    // border: 1px dotted blue;
                    left: 50%;                        /* center horizontally */
                    top: 50%;                         /* center vertically */
                    transform: translate(-50%,-50%);

                    width: $checkbox-width;
                    height: $checkbox-height;
                }
                &::after {
                    // Has the ball
                    content: '';
                    // display: flex;
                    // flex: 0 0 auto;
                    // align-self: auto;

                    position: absolute;
                    // border: 1px dotted blue;
                    left: 50%;                        /* center horizontally */
                    top: 50%;                         /* center vertically */
                    transform: translate(-50%,-50%);

                    width: $checkbox-width - ($checkbox-border * 2) - ($checkbox-inner-padding * 2);
                    height: $checkbox-height - ($checkbox-border * 2) - ($checkbox-inner-padding * 2);
                }


            }

            &.is-large {
                // width:  $checkbox-width * (1.5 * $is-large-multiplier);
                // height: $checkbox-height * (1.5 * $is-large-multiplier);
                width:  $checkbox-width * (1.6);
                height: $checkbox-height * (1.6);

                span::before {
                    width: $checkbox-width * $is-large-multiplier;
                    height: $checkbox-height * $is-large-multiplier;
                }
                span::after {
                    width: ($checkbox-width - ($checkbox-border * 2) - ($checkbox-inner-padding * 2)) * $is-large-multiplier;
                    height: ($checkbox-height - ($checkbox-border * 2) - ($checkbox-inner-padding * 2)) * $is-large-multiplier;
                }
            }

    }
    // END IS-COLOR-MENU END IS-COLOR-MENU END IS-COLOR-MENU 
    // END IS-COLOR-MENU END IS-COLOR-MENU END IS-COLOR-MENU 


    // NoUISlider -- change styling
    // UI SLIDER FOR SIZES UI SLIDER FOR SIZES UI SLIDER FOR SIZES UI SLIDER FOR SIZES 
    // UI SLIDER FOR SIZES UI SLIDER FOR SIZES UI SLIDER FOR SIZES UI SLIDER FOR SIZES 
}
